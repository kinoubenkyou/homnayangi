on:
  - push

env:
  image_name: ghcr.io/kinoubenkyou/homnayangi

jobs:

  build:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image id
        run: |
          if docker pull ${{ env.image_name }}
          then
            image_id=$(docker image ls -q -f=reference=${{ env.image_name }})
            echo "image_id=$image_id" >> "$GITHUB_ENV"
          fi
      - uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.image_name }}
          load: true
          cache-from: type=registry,ref=${{ env.image_name }}:cache
      - name: Check if image id changed
        run: |
          image_id=$(docker image ls -q -f=reference=${{ env.image_name }})
          if [ "$image_id" != "${{ env.image_id }}" ]
          then
            echo "is_image_rebuilt=true" >> "$GITHUB_ENV"
          fi
      - name: Push
        uses: docker/build-push-action@v6
        if: ${{ env.is_image_rebuilt == 'true' }}
        with:
          tags: ${{ env.image_name }}
          push: true
          cache-to: type=registry,ref=${{ env.image_name }}:cache

  format:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/kinoubenkyou/homnayangi
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - run: ruff format -q --check --preview

  lint:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/kinoubenkyou/homnayangi
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - run: ruff check -q --output-format=concise --unsafe-fixes

  test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/kinoubenkyou/homnayangi
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      env:
        DJANGO_ALLOWED_HOST: ''
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        POSTGRES_DB: postgres
        POSTGRES_HOST: postgres
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: postgres
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-start-interval 1s
          --health-start-period 5s
    steps:
      - uses: actions/checkout@v4
      - run: python manage.py test --failfast
